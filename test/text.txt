# Тестовое задание **React Developer (Next.js)**

- визуал по фигме [https://www.figma.com](https://www.figma.com)
- должен быть адаптирован под мобильные устройства и планшеты
- наполнение контентом отзывов из html обернутого в json
- наполнение контентом товары по апи
    - показывать первую страницу сразу
    - остальные страницы подгружать ajax запросом, по мере прокрутки вниз
- при нажатии на кнопку "купить", она должна меняться на кнопки + и - и поле для ввода кол-ва товара, значение поля должно быть 1, кнопки должны добавлять отбавлять товар, так же должна быть возможность вписать в поле для ввода любое кол-во.
- при изменении кол-ва какого-либо из товаров должна меняться информация в корзине (та что над полем с телефоном)
- набранные товары и введенный номер телефона должны сохраняться при перезагрузки страницы
- маска в поле для телефона
- при нажатии кнопки "заказать" идет проверка того что телефон полностью введен
    - если всё хорошо - отправлять запрос на сервер
    - если есть ошибки - подсветить соответствующие поля красным (поле номера телефона)
- после отправки запроса и получения ответа от сервера отобразить попап что всё успешно (сделать попап в стиле самого сайта)

всё из выше перечисленного делать не обязательно, но чем больше - тем лучше.
помимо исполнения конкретных пунктов тз тк же будет ценится:

- проявлении инициативы по улучшению ux на месте. например добавить прилоадеры пока грузится контент.
- отказоустойчивость. например пофиксить xss атаку через контент отзывов, учесть возможность того что название товара может быть длиннее чем в дизайне.
- скорость загрузки сайта и скорость появления там контента (рекомендуется ssr)
- читабельность/поддерживаемость/расширяемость кода

код выложить на github, gitlab или на что-то похожее.
в README указать, что из выше перечисленного было сделано, какие-то комментарии, предложения, описание проэкта, что-то такое.
так же указать как запустить чтобы можно было посмотреть результат.

API:
тело запроса и тело ответа присылать в json формате
так же для корректной работы необходимо передавать хэдер 'content-type: application/json'

- --------------------получить список отзывов----------------------

GET http://___.com:1337/reviews

параметры: НЕТ

пример ответа:

```sql
[
	{
		"id": 1,
		"text": "<h1>something</h1><p>jiofewjf wefofwejoifewoi</p>"
	}
]
```

- --------------------полуить список товаров-----------------------

GET http://___.com:1337/products?page=1&page_size=20

параметры:
'page' - страница
'page_size' - кол-во товаров на странице

пример ответа:

```sql
{
	"page": 1,
	"amount": 1,
	"total": 228,
	"items": [
		{
			"id": 12,
			"image_url": "http://example.com/image.webp",
			"title": "title",
			"description": "description, description",
			"price": 1215
		}
	]
}
```

- ----------------------------заказ-------------------------------

POST http://___.com:1337/order

пример тела запроса:

```sql
{
	"phone": "79163452487",
	"cart": [
		{
			"id": 12,
			"quantity": 2
		},
		{
			"id": 15,
			"quantity": 5
		}
	]
}

```

пример тела ответа, ошибка:

```sql
{
	"success": 0,
	"error": "отсутствуют товарвы"
}

пример тела ответа, успех:
{
	"success": 1,
}
```

***Ответ опубликовать на GitHub и отправить ссылку в бот***